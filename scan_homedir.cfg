[launcher]
; Версия протокола файла настроек
ver = 1

[module]
; Модуль для загрузки
name = index_cli.main
; Имя функции для вызова
entry = main
; Переменные секции 'DEFAULT' будут переданы функции entry с ключём key в виде dict
; Если key закомментирован, то переменные будут переданы в виде dict первым параметром
key = options

; Переменные секции 'DEFAULT' будут переданы функции entry
[DEFAULT]
; logging
logging_level = DEBUG
debug_level = 5

; Recorder
; recorder_package = index_cli
; recorder = .recorders.sqlalchemy

; Стартовый обработчик Base
loops = 1000
limit = 1000
; threads = 10
; md5 = 1
; sha256 = 1
; maxsize = 1024

; Основной обработчик
; package = index_cli
profile = default
; parser = .file_handlers.%(profile)s
; opening = opening
entry = proceed
; closing = closing

; Имя обработчика
name = %(profile)s_scan_dir

; Директория/файл для сканирования
; provider = dropbox
; access_token = 4ojchMJAKEcAAAAAAAALtN8sgaeRwSmxRPVKhfLsxs_b5U4HMF9nTGRAbALmYYBK
; files = D:\SMDrums_Sforzando_1.2
files = ~
; delimiter = ,
; files = id:SEuI6N88RcwAAAAAAAGeMA
; files_filter = *.jpg; *.jpeg
; dirs_filter = /^[^_].*/
; exclude_dirs_filter = .git; .svn
; followlinks = True
; dir_dept = 1
; sheets_filter = /^[^_].*/

; База данных: имя или URI
dbhome = ~/.index/index_flask/users/id1
dbname = %(profile)s
; dburi = sqlite:///home/stan/%(name)s.sqlite

; Здесь указываем имя переменной, по которой будет определяться метод сканирования
; Если переменная изменится, то сканирование произойдёт без учёта предыдущих
; (полное сканирование)
; Если check закомментирована, то проверяется весь файл конфигурации
check = tick

; Переменная для указания на обновление обработчика
tick = %(name)s_1

; Подразумевается, что пара переменных 'name' и 'tick' уникальна
; и не совпадают с переменными других обработчиков
